```python
import matplotlib.pyplot as plt
import numpy as np
from mpl_toolkits.mplot3d import Axes3D
from matplotlib.widgets import Slider
import matplotlib.patches as patches

fig = plt.figure(figsize=(10, 8))
ax = fig.add_subplot(111, projection='3d')
plt.subplots_adjust(bottom=0.2)

# Introduction
ax_text = plt.axes([0.05, 0.95, 0.1, 0.03])
ax_text.set_facecolor('#F7F7F7')
ax_text.set_xticklabels('')
ax_text.set_yticklabels('')
ax_text.set_zticklabels('')
ax_text.text(0.5, 0.5, 0.5, 'Gradient Descent Visualization Dashboard', ha='center', va='center', fontsize=18, color='#333333')

# Function Plot
x = np.linspace(-10, 10, 100)
y = np.linspace(-10, 10, 100)
X, Y = np.meshgrid(x, y)
Z = X**2 + Y**2
ax.plot_surface(X, Y, Z, color='#4CAF50', alpha=0.7, linewidth=2)

# Derivative Plot
ax.scatter(X, Y, np.ones_like(Z), color='#FF9800', s=5)

# Theta-Value Line
ax.plot(X, np.zeros_like(X), color='#03A9F4', linewidth=2)

# Interactive Theta Slider
ax_theta = plt.axes([0.8, 0.2, 0.1, 0.65])
ax_theta.set_facecolor('#F7F7F7')
ax_theta.set_xticklabels('')
ax_theta.set_yticklabels('')
ax_theta.set_zticklabels('')
slider = Slider(ax_theta, 'Theta', -10, 10, valinit=0)

# Annotations
ax_theta_annotation = plt.axes([0.8, 0.1, 0.1, 0.03])
ax_theta_annotation.set_facecolor('#F7F7F7')
ax_theta_annotation.set_xticklabels('')
ax_theta_annotation.set_yticklabels('')
ax_theta_annotation.set_zticklabels('')
ax_theta_annotation.text(0.5, 0.5, 'Theta-Value Line', ha='center', va='center', fontsize=12, color='#333333')

ax_derivative_annotation = plt.axes([0.8, 0.05, 0.1, 0.03])
ax_derivative_annotation.set_facecolor('#F7F7F7')
ax_derivative_annotation.set_xticklabels('')
ax_derivative_annotation.set_yticklabels('')
ax_derivative_annotation.set_zticklabels('')
ax_derivative_annotation.text(0.5, 0.5, 'Sign of Derivative (Positive/Negative)', ha='center', va='center', fontsize=12, color='#333333')

# Axes/Scale/Legends
ax.set_xlabel('Theta (Î¸)', fontsize=14)
ax.set_ylabel('Cost', fontsize=14)
ax.set_zlabel('Z', fontsize=14)
ax.grid(True)

# Styling
plt.gca().set_facecolor('#F7F7F7')
plt.title('Gradient Descent Visualization Dashboard', fontsize=18, color='#333333')
plt.xticks(fontsize=14)
plt.yticks(fontsize=14)
plt.zticks(fontsize=14)

plt.show()
```